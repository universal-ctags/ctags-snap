name: universal-ctags
summary: Parse source code to build an index of defined symbols.
adopt-info: universal-ctags

description: |
  ctags parses source code to produce an index file, mapping the names of
  symbols, like functions, classes, and variables, to the locations where
  they are defined. This index is used by editors like Vim and Emacs
  to enable feaures like 'go to definition'.
  
  Universal Ctags is a fork of the venerable Exuberant Ctags, that adds
  additional features, including support for more languages.
  
  **Usage**
  
  When installed, this snap provides executable `universal-ctags`,
  and alias `ctags`.
  
  See ctags online useage documentation at
  http://docs.ctags.io/en/latest/man/ctags.1.html
  
  **Limitations**
  
  Compared to universal-ctags installed using apt, or compiled from source,
  this snap has some limitations, introduced by snap security restrictions.
  
  1. Source files cannot be scanned if they are:
  
     * Outside the user's $HOME directory, or
     * In a top-level hidden directory in $HOME, eg. `~/.src`.
  
     Lower-level hidden directories, eg. `~/proj/.src`, can be scanned.
  
  2. Ctags usually reads config from the following directories:
  
     * The user's `~/.ctags.d/` is read as expected.
     * The current directory's `ctags.d` is not read by default,
       but the '--options' arg can be used to read from it.
     * The current directory's `.ctags.d` cannot be read.
  
  3. Configuration in other places, specified using `--options`
     or `--options-maybe`, will not be read if they are outside the
     user's HOME, or in a top-level hidden directory.
  
  4. Tag files written using '-f' options or similar may not be outside
     the user's $HOME directory, nor in a top-level hidden file or directory.
     You may be able to work around this by using `-f -` and redirecting stdout
     to the required location.
  
  5. The universal-ctags 'man' pages are not installed. But you can see them
     online at http://docs.ctags.io/en/latest/man/ctags.1.html
  
  6. The 'etags' executable alias (which defaults to Emacs style tags files)
     is not installed. Use `ctags --output-format=etags` or `ctags -e` instead.
  
  If these or other issues cause you problems, let me know at
  https://github.com/universal-ctags/ctags-snap/issues

base: core20
grade: stable
confinement: strict
architectures:
  - build-on: amd64
  - build-on: arm64
  - build-on: armhf
  - build-on: i386
  - build-on: ppc64el
  # - build-on: s390x # builds fail on snapstore, dunno why.

plugs:
  dot-ctags:
    interface: personal-files
    read: [$HOME/.ctags.d]

apps:
  universal-ctags:
    plugs: [home, dot-ctags]
    command: universal-ctags-wrapper

parts:
  universal-ctags:
    source-type: git
    source: https://github.com/universal-ctags/ctags.git
    plugin: autotools
    build-packages: [pkg-config, libyaml-dev, libxml2-dev, libjansson-dev]
    stage-packages: [libxml2, libjansson4]
    override-pull: |
      snapcraftctl pull
      snapcraftctl set-version "0.$(date -u +%Y-%m-%d+%H:%M:%S)+$(git show -s --format=%h)"
    override-prime: |
      snapcraftctl prime
      echo >universal-ctags-wrapper '#!/usr/bin/env bash
      # Wrapper around the ctags executable,
      # to set HOME back to the user'"'"'s home dir,
      # so that ctags can read config files in ~/.ctags.d/
      # (Contained snaps set HOME to $SNAP_USER_DATA instead.)
      dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
      HOME=$(python3 -SIBc '"'"'
      import os, pwd
      print(pwd.getpwuid(os.getuid()).pw_dir)
      '"'"') $dir/usr/local/bin/ctags "$@"
      '
      chmod a+x universal-ctags-wrapper

